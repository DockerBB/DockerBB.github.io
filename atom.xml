<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>中南头号黑子的学习记录</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.six1110.top/"/>
  <updated>2020-05-02T05:03:15.181Z</updated>
  <id>https://www.six1110.top/</id>
  
  <author>
    <name>中南头号黑子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leetcode周赛压轴专题</title>
    <link href="https://www.six1110.top/posts/8e79d167.html"/>
    <id>https://www.six1110.top/posts/8e79d167.html</id>
    <published>2020-05-01T14:49:00.000Z</published>
    <updated>2020-05-02T05:03:15.181Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近周赛的压轴题都是dp，总结一下&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-trie树专题</title>
    <link href="https://www.six1110.top/posts/e8b1e390.html"/>
    <id>https://www.six1110.top/posts/e8b1e390.html</id>
    <published>2020-04-26T05:44:00.000Z</published>
    <updated>2020-04-26T06:06:37.847Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;trie树，又称单词查找树，前缀树，字典树，是一种树形结构，是一种哈希树的变种。典型应用是用于统计，排序和保存大量的字符串（但不仅限于字符串），所以经常被搜索引擎系统用于文本词频统计，自动补全等。它的优点是：利用字符串的公共前缀来减少查询时间，最大限度地减少无谓的字符串比较，查询效率比哈希树高。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://www.six1110.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="trie树" scheme="https://www.six1110.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/trie%E6%A0%91/"/>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
      <category term="数据结构" scheme="https://www.six1110.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="trie树" scheme="https://www.six1110.top/tags/trie%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 第24场双周赛</title>
    <link href="https://www.six1110.top/posts/9ae66173.html"/>
    <id>https://www.six1110.top/posts/9ae66173.html</id>
    <published>2020-04-18T16:20:00.000Z</published>
    <updated>2020-04-18T17:08:49.202Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;哎 每次都只能做出来前前前前面三道，左后一道永远卡住，永远排名几百&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="贪心" scheme="https://www.six1110.top/categories/leetcode/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
      <category term="贪心" scheme="https://www.six1110.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 55  跳跃游戏, 45 跳跃游戏II</title>
    <link href="https://www.six1110.top/posts/25a913d8.html"/>
    <id>https://www.six1110.top/posts/25a913d8.html</id>
    <published>2020-04-16T18:03:00.000Z</published>
    <updated>2020-04-16T18:16:36.447Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;leetcode-55-跳跃游戏&quot;&gt;&lt;a href=&quot;#leetcode-55-跳跃游戏&quot; class=&quot;headerlink&quot; title=&quot;leetcode 55 跳跃游戏&quot;&gt;&lt;/a&gt;leetcode 55 跳跃游戏&lt;/h1&gt;&lt;p&gt;给定一个非负整数数组，你最初位于数组的第一个位置。&lt;/p&gt;
&lt;p&gt;数组中的每个元素代表你在该位置可以跳跃的最大长度。&lt;/p&gt;
&lt;p&gt;判断你是否能够到达最后一个位置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="贪心" scheme="https://www.six1110.top/categories/leetcode/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
      <category term="贪心" scheme="https://www.six1110.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 678 有效的括号字符串</title>
    <link href="https://www.six1110.top/posts/e35fce41.html"/>
    <id>https://www.six1110.top/posts/e35fce41.html</id>
    <published>2020-04-14T11:57:00.000Z</published>
    <updated>2020-04-14T12:14:31.289Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给定一个只包含三种字符的字符串：（ ，） 和 *，写一个函数来检验这个字符串是否为有效字符串。有效字符串具有如下规则：&lt;/p&gt;
&lt;p&gt;任何左括号 ( 必须有相应的右括号 )。&lt;br&gt;任何右括号 ) 必须有相应的左括号 ( 。&lt;br&gt;左括号 ( 必须在对应的右括号之前 )。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以被视为单个右括号 ) ，或单个左括号 ( ，或一个空字符串。&lt;br&gt;一个空字符串也被视为有效字符串。&lt;br&gt;字符串大小将在 [1，100] 范围内。
    
    </summary>
    
    
      <category term="dfs" scheme="https://www.six1110.top/categories/dfs/"/>
    
      <category term="模拟" scheme="https://www.six1110.top/categories/dfs/%E6%A8%A1%E6%8B%9F/"/>
    
    
      <category term="dfs" scheme="https://www.six1110.top/tags/dfs/"/>
    
      <category term="模拟" scheme="https://www.six1110.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 649 Dota2 参议员</title>
    <link href="https://www.six1110.top/posts/43feac7d.html"/>
    <id>https://www.six1110.top/posts/43feac7d.html</id>
    <published>2020-04-14T11:27:00.000Z</published>
    <updated>2020-04-14T11:53:59.091Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Dota2 的世界里有两个阵营：Radiant(天辉)和 Dire(夜魇)&lt;/p&gt;
&lt;p&gt;Dota2 参议院由来自两派的参议员组成。现在参议院希望对一个 Dota2 游戏里的改变作出决定。他们以一个基于轮为过程的投票进行。在每一轮中，每一位参议员都可以行使两项权利中的一项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;禁止一名参议员的权利：&lt;br&gt;  参议员可以让另一位参议员在这一轮和随后的几轮中丧失所有的权利。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;宣布胜利：&lt;br&gt;  如果参议员发现有权利投票的参议员都是同一个阵营的，他可以宣布胜利并决定在游戏中的有关变化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="贪心" scheme="https://www.six1110.top/categories/leetcode/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
      <category term="贪心" scheme="https://www.six1110.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 面试题16.03 交点</title>
    <link href="https://www.six1110.top/posts/936ff75f.html"/>
    <id>https://www.six1110.top/posts/936ff75f.html</id>
    <published>2020-04-13T13:44:38.000Z</published>
    <updated>2020-04-13T14:12:33.421Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给定两条线段（表示为起点$start = {X1, Y1}$和终点 $end = {X2, Y2}$ ），如果它们有交点，请计算其交点，没有交点则返回空值。&lt;/p&gt;
&lt;p&gt;要求浮点型误差不超过$10^{-6}$。若有多个交点（线段重叠）则返回 X 值最小的点，X 坐标相同则返回 Y 值最小的点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="https://www.six1110.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="数学" scheme="https://www.six1110.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 355 设计推特</title>
    <link href="https://www.six1110.top/posts/61e85a35.html"/>
    <id>https://www.six1110.top/posts/61e85a35.html</id>
    <published>2020-04-13T13:32:08.000Z</published>
    <updated>2020-04-13T13:39:36.223Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;设计一个简化版的推特(Twitter)，可以让用户实现发送推文，关注/取消关注其他用户，能够看见关注人（包括自己）的最近十条推文。你的设计需要支持以下的几个功能：&lt;/p&gt;
&lt;p&gt;postTweet(userId, tweetId): 创建一条新的推文&lt;br&gt;getNewsFeed(userId): 检索最近的十条推文。每个推文都必须是由此用户关注的人或者是用户自己发出的。推文必须按照时间顺序由最近的开始排序。&lt;br&gt;follow(followerId, followeeId): 关注一个用户&lt;br&gt;unfollow(followerId, followeeId): 取消关注一个用户&lt;/p&gt;
    
    </summary>
    
    
      <category term="模拟" scheme="https://www.six1110.top/categories/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="设计" scheme="https://www.six1110.top/categories/%E6%A8%A1%E6%8B%9F/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="模拟" scheme="https://www.six1110.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="设计" scheme="https://www.six1110.top/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>二维费用的背包问题</title>
    <link href="https://www.six1110.top/posts/c3509816.html"/>
    <id>https://www.six1110.top/posts/c3509816.html</id>
    <published>2020-03-18T16:57:18.000Z</published>
    <updated>2020-03-18T17:09:55.387Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;完全背包问题的模型如下：&lt;br&gt;有 N 件物品和一个容量是 V 的背包，背包能承受的最大重量是 M。每件物品只能用一次。体积是 $v_i$，重量是 $m_i$，价值是 $w_i$。求解将哪些物品装入背包，可使物品总体积不超过背包容量，总重量不超过背包可承受的最大重量，且价值总和最大。&lt;br&gt;输出最大价值。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>混合背包</title>
    <link href="https://www.six1110.top/posts/4687017g.html"/>
    <id>https://www.six1110.top/posts/4687017g.html</id>
    <published>2020-03-18T16:44:14.000Z</published>
    <updated>2020-03-18T16:50:51.321Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有 N 种物品和一个容量是 V 的背包。&lt;br&gt;物品一共有三类：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;第一类物品只能用1次(s&amp;lt;0时)（01背包）；&lt;/li&gt;
&lt;li&gt;第二类物品可以用无限次(s=0时)（完全背包）；&lt;/li&gt;
&lt;li&gt;第三类物品最多只能用 $s_i$ 次(s&amp;gt;0时)（多重背包）；&lt;br&gt;每种体积是 $v_i$，价值是 $w_i$。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。&lt;br&gt;输出最大价值。
    
    </summary>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>leetcode动态规划专题</title>
    <link href="https://www.six1110.top/posts/59a5b963.html"/>
    <id>https://www.six1110.top/posts/59a5b963.html</id>
    <published>2019-11-27T03:13:35.000Z</published>
    <updated>2020-03-18T16:53:20.509Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;感觉dp真的很困难，刷不动。打算后面几天刷一下dp的题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 377 组合总和Ⅳ</title>
    <link href="https://www.six1110.top/posts/758b2bfb.html"/>
    <id>https://www.six1110.top/posts/758b2bfb.html</id>
    <published>2019-11-27T03:09:16.000Z</published>
    <updated>2020-03-18T16:54:23.887Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;给定一个由正整数组成且不存在重复数字的数组，找出和为给定目标正整数的组合的个数。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 72 编辑距离</title>
    <link href="https://www.six1110.top/posts/5a2e5835.html"/>
    <id>https://www.six1110.top/posts/5a2e5835.html</id>
    <published>2019-11-27T03:05:00.000Z</published>
    <updated>2020-03-18T16:53:54.105Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;给定两个单词 word1 和 word2，计算出将 word1 转换成 word2 所使用的最少操作数 。&lt;br&gt;你可以对一个单词进行如下三种操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插入一个字符&lt;/li&gt;
&lt;li&gt;删除一个字符&lt;/li&gt;
&lt;li&gt;替换一个字符&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 52 N皇后题解</title>
    <link href="https://www.six1110.top/posts/d11b2892.html"/>
    <id>https://www.six1110.top/posts/d11b2892.html</id>
    <published>2019-11-27T02:57:24.000Z</published>
    <updated>2020-03-18T16:53:45.048Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;n 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="dfs" scheme="https://www.six1110.top/categories/leetcode/dfs/"/>
    
      <category term="回溯" scheme="https://www.six1110.top/categories/leetcode/dfs/%E5%9B%9E%E6%BA%AF/"/>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
      <category term="dfs" scheme="https://www.six1110.top/tags/dfs/"/>
    
      <category term="回溯" scheme="https://www.six1110.top/tags/%E5%9B%9E%E6%BA%AF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript迭代器和函数深入</title>
    <link href="https://www.six1110.top/posts/ba033a64.html"/>
    <id>https://www.six1110.top/posts/ba033a64.html</id>
    <published>2019-11-26T09:54:55.000Z</published>
    <updated>2019-11-27T02:00:03.333Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Js迭代器和函数深入&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://www.six1110.top/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.six1110.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习记录面向对象编程-动态属性-原型-静态方法-继承-map-WeakMap-异常</title>
    <link href="https://www.six1110.top/posts/279f5654.html"/>
    <id>https://www.six1110.top/posts/279f5654.html</id>
    <published>2019-11-26T09:54:55.000Z</published>
    <updated>2019-11-27T02:00:03.332Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Js面向对象编程&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://www.six1110.top/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.six1110.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Script学习记录 异步深入</title>
    <link href="https://www.six1110.top/posts/5be64662.html"/>
    <id>https://www.six1110.top/posts/5be64662.html</id>
    <published>2019-11-26T09:54:55.000Z</published>
    <updated>2019-11-27T02:00:03.334Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;想吐槽一下，这个部分有点恶心 太绕了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://www.six1110.top/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.six1110.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>leetcode329矩阵中的最长递增路径</title>
    <link href="https://www.six1110.top/posts/410e261c.html"/>
    <id>https://www.six1110.top/posts/410e261c.html</id>
    <published>2019-11-26T09:54:55.000Z</published>
    <updated>2019-11-27T02:00:03.336Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;给定一个整数矩阵，找出最长递增路径的长度。&lt;br&gt;对于每个单元格，你可以往上，下，左，右四个方向移动。 你不能在对角线方向上移动或移动到边界外（即不允许环绕）。（就是非常经典的滑雪题）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>01背包总结</title>
    <link href="https://www.six1110.top/posts/2b28a584.html"/>
    <id>https://www.six1110.top/posts/2b28a584.html</id>
    <published>2019-11-26T09:44:14.000Z</published>
    <updated>2019-11-27T02:32:56.088Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。第i件物品的体积是 vi，价值是 wi。求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。输出最大价值。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://www.six1110.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-50-Pow-x-n</title>
    <link href="https://www.six1110.top/posts/89f24699.html"/>
    <id>https://www.six1110.top/posts/89f24699.html</id>
    <published>2019-11-26T09:44:14.000Z</published>
    <updated>2020-03-18T16:53:35.265Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;实现 pow(x, n) ，即计算 x 的 n 次幂函数。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/categories/leetcode/"/>
    
      <category term="位运算" scheme="https://www.six1110.top/categories/leetcode/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    
      <category term="leetcode" scheme="https://www.six1110.top/tags/leetcode/"/>
    
      <category term="位运算" scheme="https://www.six1110.top/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
</feed>
